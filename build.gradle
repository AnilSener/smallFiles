

apply plugin: 'idea'
apply plugin: 'groovy'
//apply plugin: 'scala'
apply plugin:'application'

//mainClassName = 'com.imshealthcare.NiFi_Data_Collection_Client'
// Variables

//groovyVersion = '2.4.7'
mainClassName = 'com.imshealthcare.NiFi_Data_Collection_Client'



sourceSets {
    main {
        groovy {
            // this makes the groovy-compiler compile groovy- as well
            // as java-files.
            // Needed, because java is normally compiled before groovy.
            // Since we are using groovy objects from java, we need it
            // the other way round.
            srcDirs = ['src/main/groovy']
        }

        /*scala {
            srcDirs = ['src/main/scala'] // don't compile Java code twice
        }*/
    }
}

/*configure(subprojects.findAll {project  ->
    file('src/main/scala').exists()
}) {
    apply plugin: 'scala'
}

configure(subprojects.findAll {project  ->
    file('src/main/groovy').exists()
}) {
    apply plugin: 'groovy'
}*/

task fatJar(type: Jar) {
    //from files('src/main/groovy')
    manifest {
        attributes 'Main-Class': "$mainClassName"
    }
    baseName = "${project.name}_Data_Collection"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenCentral()
    flatDir {
        dirs "$rootProject.projectDir/libs"
    }
}

dependencies {
//This brings in the Groovy system:
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.5'
    //groovy group: 'org.codehaus.groovy', name: 'groovy', version: '1.6.5'
    //compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.14'
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/nifi-client-0.3-all.jar')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}